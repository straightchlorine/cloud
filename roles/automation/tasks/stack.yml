- name: Create Docker Compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ automation_stack_home }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart automation stack

- name: Create alertmanager config file
  ansible.builtin.template:
    src: alertmanager.yml.j2
    dest: "{{ automation_stack_home }}/config/alertmanager/alertmanager.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart automation stack

- name: Create InfluxDB3 data directories
  ansible.builtin.file:
    path: "{{ automation_data_path }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - influxdb3/data
    - influxdb3/plugins
    - influxdb3-explorer
    - alertmanager
    - vaultwarden
    - portainer
  become: true

- name: Create config directories
  ansible.builtin.file:
    path: "{{ automation_stack_home }}/config/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - alertmanager
    - dozzle
    - influxdb3-explorer

- name: Create stack management script
  ansible.builtin.template:
    src: manage-automation.sh.j2
    dest: "{{ automation_stack_home }}/scripts/manage-automation.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create stack backup script
  ansible.builtin.template:
    src: backup-automation.sh.j2
    dest: "{{ automation_stack_home }}/scripts/backup-automation.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create Docker network for Traefik
  community.docker.docker_network:
    name: traefik-network
    driver: bridge
    state: present
    scope: local
  become_user: "{{ ansible_user }}"
  tags: [docker, network, traefik]

- name: Start automation stack
  ansible.builtin.shell: |
    cd "{{ automation_stack_home }}"
    docker compose up -d
  become_user: "{{ ansible_user }}"
  args:
    executable: /bin/bash
  when: start_stack | default(true)

- name: Wait for services to be ready
  ansible.builtin.pause:
    seconds: 30
  when: start_stack | default(true)

- name: Create symlinks for management scripts
  ansible.builtin.file:
    src: "{{ automation_stack_home }}/scripts/manage-automation.sh"
    dest: "/usr/local/bin/manage-automation"
    state: link
  become: true

- name: Display service information
  ansible.builtin.debug:
    msg: |
      Automation Stack Deployment Complete!

      Services:
      - Traefik Dashboard: https://{{ subdomain_traefik }}.{{ domain_name }}

      Management:
      - Stack control: manage-automation {start|stop|restart|status|logs}
      - Backup: {{ automation_stack_home }}/scripts/backup-automation.sh

      Data locations:
      - Traefik: {{ automation_data_path }}/traefik

