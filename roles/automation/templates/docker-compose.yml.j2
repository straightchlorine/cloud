services:

  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "{{ traefik_web_port }}:80"
      - "{{ traefik_websecure_port }}:443"
      - "192.168.20.20:{{ traefik_dashboard_port }}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/config:ro
      - {{ automation_data_path }}/traefik:/data
      - ./logs:/logs
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
      - CF_DNS_API_TOKEN={{ vault_cloudflare_api_token | default('') }}
    command:
      - --configFile=/config/traefik.yml
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`{{ subdomain_traefik }}.{{ domain_name }}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users={{ vault_traefik_basic_auth }}"

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/dozzle:/data
    networks:
      - traefik-network
    environment:
      - DOZZLE_REMOTE_AGENT=media:7007
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.rule=Host(`{{ subdomain_dozzle }}.{{ domain_name }}`)"
      - "traefik.http.routers.dozzle.entrypoints=websecure"
      - "traefik.http.routers.dozzle.tls.certresolver=letsencrypt"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{ automation_data_path }}/portainer:/data
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`{{ subdomain_portainer }}.{{ domain_name }}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  influxdb3-core:
    image: influxdb:3-core
    container_name: influxdb3-core
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - "8181:8181"
    command:
      - influxdb3
      - serve
      - --node-id=node0
      - --object-store=file
      - --data-dir=/var/lib/influxdb3/data
      - --plugin-dir=/var/lib/influxdb3/plugins
    volumes:
      - {{ automation_data_path }}/influxdb3/data:/var/lib/influxdb3/data
      - {{ automation_data_path }}/influxdb3/plugins:/var/lib/influxdb3/plugins
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb.rule=Host(`{{ subdomain_influxdb }}.{{ domain_name }}`)"
      - "traefik.http.routers.influxdb.entrypoints=websecure"
      - "traefik.http.routers.influxdb.tls.certresolver=letsencrypt"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8181"

  influxdb3-explorer:
    image: influxdata/influxdb3-ui:1.2.0
    container_name: influxdb3-explorer
    restart: unless-stopped
    command: ["--mode=admin"]
    ports:
      - "8888:80"
    environment:
      SESSION_SECRET_KEY: {{ vault_influxdb3_session_secret_key }}
    volumes:
      - {{ automation_data_path }}/influxdb3-explorer:/db:rw
      - ./config/influxdb3-explorer:/app-root/config:ro
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb-explorer.rule=Host(`{{ subdomain_explorer }}.{{ domain_name }}`)"
      - "traefik.http.routers.influxdb-explorer.entrypoints=websecure"
      - "traefik.http.routers.influxdb-explorer.tls.certresolver=letsencrypt"
      - "traefik.http.services.influxdb-explorer.loadbalancer.server.port=80"

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    volumes:
      - {{ automation_data_path }}/vaultwarden:/data
    environment:
      - DOMAIN=https://{{ subdomain_vaultwarden }}.{{ domain_name }}
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`{{ subdomain_vaultwarden }}.{{ domain_name }}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "192.168.20.20:8084:8080"
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *
      - WATCHTOWER_HTTP_API_METRICS=true
      - WATCHTOWER_HTTP_API_TOKEN={{ vault_watchtower_api_token | default('watchtower-metrics-token') }}
    networks:
      - traefik-network

networks:
  traefik-network:
    external: true

volumes:
  traefik-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: {{ automation_data_path }}/traefik
