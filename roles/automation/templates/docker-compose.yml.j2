# Automation Stack Docker Compose
# Raspberry Pi 4B - Traefik + NextCloud + Paperless-ngx

services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "{{ traefik_web_port }}:80"
      - "{{ traefik_websecure_port }}:443"
      - "{{ traefik_dashboard_port }}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/config:ro
      - {{ automation_data_path }}/traefik:/data
      - ./logs:/logs
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
    command:
      - --configFile=/config/traefik.yml
    networks:
      - traefik-network
    labels:
      - "traefik.enable=false"  # Dashboard accessed directly on port 8080


  # NextCloud Application
  nextcloud:
    image: nextcloud:28-apache
    container_name: nextcloud
    restart: unless-stopped
    volumes:
      - nextcloud-data:/var/www/html/data
      - nextcloud-config:/var/www/html/config
      - nextcloud-apps:/var/www/html/custom_apps
      - {{ automation_data_path }}/nextcloud/data:/external-data
    env_file:
      - ./config/nextcloud/nextcloud.env
    depends_on:
      shared-db:
        condition: service_healthy
      shared-redis:
        condition: service_started
    networks:
      - backend-network
      - traefik-network
    healthcheck:
      test: curl -f http://localhost:80/status.php || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`{{ subdomain_nextcloud }}.{{ domain_name }}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-dav"


  # Paperless-ngx Application
  paperless-web:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.17
    container_name: paperless-web
    restart: unless-stopped
    depends_on:
      shared-db:
        condition: service_healthy
      shared-redis:
        condition: service_started
      # paperless-gotenberg:
      #   condition: service_started
    volumes:
      - paperless-data:/usr/src/paperless/data
      - paperless-media:/usr/src/paperless/media
      - paperless-export:/usr/src/paperless/export
      - paperless-consume:/usr/src/paperless/consume
      - {{ automation_data_path }}/paperless/consume:/external-consume
      - {{ automation_data_path }}/paperless/export:/external-export
      - ./logs:/usr/src/paperless/logs
    env_file:
      - ./config/paperless/paperless.env
    networks:
      - backend-network
      - traefik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.rule=Host(`{{ subdomain_paperless }}.{{ domain_name }}`)"
      - "traefik.http.routers.paperless.entrypoints=websecure"
      - "traefik.http.routers.paperless.tls.certresolver=letsencrypt"
      - "traefik.http.routers.paperless.middlewares=paperless-headers@file"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"


  # Shared Redis for NextCloud and Paperless
  shared-redis:
    image: redis:alpine
    container_name: shared-redis
    restart: unless-stopped
    volumes:
      - shared-redis:/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Shared Database for NextCloud and Paperless
  shared-db:
    image: mariadb:lts
    container_name: shared-db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - shared-db:/var/lib/mysql
      - ./config/init-multiple-db.sql:/docker-entrypoint-initdb.d/init-multiple-db.sql:ro
    environment:
      - MARIADB_ROOT_PASSWORD={{ nextcloud_root_db_password }}
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
      - MYSQL_INITDB_SKIP_TZINFO=1
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


networks:
  traefik-network:
    external: true
  backend-network:
    internal: true


volumes:
  traefik-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: {{ automation_data_path }}/traefik

  shared-db:
  shared-redis:

  nextcloud-data:
  nextcloud-config:
  nextcloud-apps:

  paperless-data:
  paperless-media:
  paperless-export:
  paperless-consume:


# move those to a separate machine
# Paperless-ngx Gotenberg (PDF conversion)
# paperless-gotenberg:
#   image: gotenberg/gotenberg:7.10
#   container_name: paperless-gotenberg
#   restart: unless-stopped
#   command:
#     - "gotenberg"
#     - "--chromium-disable-javascript=true"
#     - "--chromium-allow-list=file:///tmp/.*"
#   networks:
#     - backend-network


# Paperless-ngx Tika (OCR) - Disabled due to ARM64 compatibility issues
# paperless-tika:
#   image: apache/tika:2.9.1.0-full
#   container_name: paperless-tika
#   restart: unless-stopped
#   networks:
#     - paperless-network

