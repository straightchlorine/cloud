---
http:
  routers:

    opnsense:
      rule: "Host(`opnsense.{{ domain_name }}`)"
      entryPoints:
        - websecure
      service: opnsense
      tls:
        certResolver: letsencrypt

    pihole:
      rule: "Host(`pihole.{{ domain_name }}`)"
      entryPoints:
        - websecure
      service: pihole
      tls:
        certResolver: letsencrypt
      middlewares:
        - pihole-redirect
        - rate-limit
        - body-limit
        - default-headers

    grafana:
      rule: "Host(`grafana.{{ domain_name }}`)"
      entryPoints:
        - websecure
      service: grafana
      tls:
        certResolver: letsencrypt
      middlewares:
        - rate-limit
        - body-limit
        - default-headers

    navidrome:
      rule: "Host(`navidrome.{{ domain_name }}`)"
      entryPoints:
        - websecure
      service: navidrome
      tls:
        certResolver: letsencrypt
      middlewares:
        - rate-limit
        - body-limit
        - default-headers

    euler:
      rule: "Host(`euler.{{ domain_name }}`)"
      entryPoints:
        - websecure
      service: euler
      tls:
        certResolver: letsencrypt
      middlewares:
        - rate-limit
        - body-limit
        - default-headers

    kepler:
      rule: "Host(`kepler.{{ domain_name }}`)"
      entryPoints:
        - websecure
      service: kepler
      tls:
        certResolver: letsencrypt
      middlewares:
        - rate-limit
        - body-limit
        - default-headers

  serversTransports:
    opnsense-transport:
      insecureSkipVerify: false
      serverName: "opnsense.codextechnologies.org"

  services:
    opnsense:
      loadBalancer:
        serversTransport: opnsense-transport
        servers:
          - url: "https://192.168.20.1"

    pihole:
      loadBalancer:
        servers:
          - url: "http://192.168.20.10:80"

    grafana:
      loadBalancer:
        servers:
          - url: "http://192.168.20.5:3000"

    navidrome:
      loadBalancer:
        servers:
          - url: "http://192.168.20.15:4545"

    euler:
      loadBalancer:
        servers:
          - url: "http://192.168.100.115"

    kepler:
      loadBalancer:
        servers:
          - url: "http://192.168.50.6"


  middlewares:
    rate-limit:
      rateLimit:
        burst: 100
        average: 50

    body-limit:
      buffering:
        maxRequestBodyBytes: 1000000  # 1MB

    pihole-redirect:
      redirectRegex:
        regex: "^https?://([^/]+)/?$"
        replacement: "https://${1}/admin"
        permanent: true

    auth:
      basicAuth:
        users:
          - "{{ vault_traefik_basic_auth }}"

    metrics-auth:
      basicAuth:
        users:
          - "{{ vault_traefik_metrics_auth }}"

    prometheus-metrics:
      chain:
        middlewares:
          - metrics-auth
          - prometheus-cors

    prometheus-cors:
      headers:
        accessControlAllowOriginList:
          - "http://{{ vault_prometheus_ip }}"
          - "https://{{ vault_prometheus_ip }}"
        accessControlAllowMethods:
          - GET
          - OPTIONS
        accessControlAllowHeaders:
          - "Authorization"
          - "Content-Type"
        accessControlMaxAge: 86400

    secure-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        referrerPolicy: "same-origin"
        customFrameOptionsValue: "SAMEORIGIN"
        customRequestHeaders:
          X-Forwarded-Proto: "https"

    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customResponseHeaders:
          Permissions-Policy: "camera=(), microphone=(), geolocation=(), payment=(), usb=()"
          Referrer-Policy: "strict-origin-when-cross-origin"

    https-redirect:
      redirectScheme:
        scheme: https
        permanent: true

tls:
  options:
    default:
      minVersion: "VersionTLS12"
      maxVersion: "VersionTLS13"
      cipherSuites:
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_RSA_WITH_AES_128_GCM_SHA256"
