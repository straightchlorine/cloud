---
# Music stack deployment

- name: Create Docker Compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ music_stack_home }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create Beets config directory
  file:
    path: "{{ music_stack_home }}/config/beets"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create Beets configuration
  template:
    src: beets-config.yaml.j2
    dest: "{{ music_stack_home }}/config/beets/config.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create genres whitelist for Beets
  copy:
    content: |
      Rock
      Pop
      Hip-Hop
      Electronic
      Jazz
      Classical
      Folk
      Country
      Blues
      Reggae
      Metal
      Punk
      Alternative
      Indie
      R&B
      Soul
      Funk
      Disco
      House
      Techno
      Trance
      Drum & Bass
      Dubstep
      Ambient
      World
      Latin
      Soundtrack
      YouTube
      Podcast
      Speech
    dest: "{{ music_stack_home }}/config/beets/genres.txt"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create additional Beets directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - "{{ music_stack_home }}/archive"
    - "{{ music_library_path }}/downloads"
    - "{{ music_library_path }}/processing"

- name: Create Navidrome config directory
  file:
    path: "{{ music_stack_home }}/config/navidrome"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create logs directory
  file:
    path: "{{ music_stack_home }}/logs"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Generate JWT secret for Navidrome
  command: openssl rand -hex 32
  register: jwt_secret
  changed_when: false
  no_log: true

- name: Create .env file for Docker Compose
  template:
    src: env.j2
    dest: "{{ music_stack_home }}/.env"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
  vars:
    navidrome_jwt_secret: "{{ jwt_secret.stdout }}"

- name: Remove apt-installed yt-dlp if present
  apt:
    name: yt-dlp
    state: absent
    purge: yes
  become: yes
  ignore_errors: yes

- name: Install dependencies for YouTube playlist downloads
  apt:
    name:
      - python3-pip
      - python3-venv
      - python3-dev
      - build-essential
      - ffmpeg
      - curl
      - wget
    state: present
  become: yes

- name: Download yt-dlp binary for ARM64
  get_url:
    url: https://github.com/yt-dlp/yt-dlp/releases/download/2025.08.27/yt-dlp_linux_aarch64
    dest: /usr/local/bin/yt-dlp
    mode: '0755'
    owner: root
    group: root
    force: yes
    backup: yes
  become: yes
  register: ytdlp_download

- name: Ensure yt-dlp binary is executable
  file:
    path: /usr/local/bin/yt-dlp
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Verify yt-dlp installation
  command: /usr/local/bin/yt-dlp --version
  register: ytdlp_version
  changed_when: false
  become: yes

- name: Display yt-dlp version
  debug:
    msg: "yt-dlp version installed: {{ ytdlp_version.stdout }}"

- name: Create virtual environment for Beets
  command: python3 -m venv {{ music_stack_home }}/venv
  args:
    creates: "{{ music_stack_home }}/venv/bin/python"
  become_user: "{{ ansible_user }}"

- name: Install Beets and plugins in virtual environment
  pip:
    name:
      - beets
      - requests
      - pillow
      - pyacoustid
      - musicbrainzngs
      - pylast
      - beautifulsoup4
      - rarfile
    virtualenv: "{{ music_stack_home }}/venv"
  become_user: "{{ ansible_user }}"

- name: Create Beets wrapper script
  copy:
    content: |
      #!/bin/bash
      source {{ music_stack_home }}/venv/bin/activate
      exec beet "$@"
    dest: /usr/local/bin/beet
    mode: '0755'
  become: yes

- name: Create YouTube download configuration
  template:
    src: yt-dlp.conf.j2
    dest: "{{ music_stack_home }}/config/yt-dlp.conf"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create YouTube playlist download script
  template:
    src: youtube-sync.sh.j2
    dest: "{{ music_stack_home }}/scripts/youtube-sync.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create YouTube environment configuration file
  template:
    src: youtube.env.j2
    dest: "{{ music_stack_home }}/config/youtube.env"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create simplified playlist-update script
  template:
    src: playlist-update.j2
    dest: "{{ music_stack_home }}/scripts/playlist-update"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Start music stack
  community.docker.docker_compose_v2:
    project_src: "{{ music_stack_home }}"
    state: present
  when: start_stack | default(true)