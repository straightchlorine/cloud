services:
  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    ports:
      - "{{ navidrome_port }}:4533"  # Expose for Traefik on pi-automation
    environment:
      ND_MUSICFOLDER: /music
      ND_DATAFOLDER: /data
      ND_LOGLEVEL: info
      ND_BASEURL: "https://navidrome.codextechnologies.org"
      ND_JWTKEY: "${NAVIDROME_JWT_SECRET}"
      ND_AUTOIMPORTPLAYLISTS: false
      ND_SCANNER_INTERVAL: 0  # Disable auto-scanning
      ND_ENABLEINSIGHTSCOLLECTOR: false
      # Backup configuration (daily at 1 AM, keep 7 local backups)
      ND_BACKUP_PATH: "/data/backups"
      ND_BACKUP_SCHEDULE: "0 1 * * *"  
      ND_BACKUP_COUNT: 7
      # Cache optimization for Raspberry Pi
      ND_IMAGECACHESIZE: "250MB"
      ND_TRANSCODINGCACHESIZE: "500MB" 
      # Scanner optimizations
      ND_SCANNER_WATCHERWAIT: "10s"
      ND_SCANNER_SCANONSTARTUP: true
      ND_SCANNER_PURGEMISSING: "full"
      # Performance and security
      ND_SESSIONTIMEOUT: "24h"
      ND_DEFAULTUIVOLUME: 80
      ND_ENABLELOGREDACTING: true
      # Transcoding
      ND_DEFAULTDOWNSAMPLINGFORMAT: "opus"
      ND_ENABLETRANSCODINGCONFIG: true
      # UI improvements
      ND_DEFAULTTHEME: "Dark"
      ND_ENABLECOVERANIMATION: false
      ND_MAXSIDEBARPLAYLISTS: 50
    volumes:
      - "{{ music_library_path }}/music:/music:ro"
      - "{{ music_library_path }}/navidrome-data:/data"
    restart: unless-stopped
    user: "{{ ansible_uid }}:{{ ansible_gid }}"

  beets:
    image: linuxserver/beets:latest
    container_name: beets
    environment:
      PUID: {{ ansible_uid }}
      PGID: {{ ansible_gid }}
      TZ: {{ timezone }}
    volumes:
      - "{{ music_stack_home }}/config/beets:/config"
      - "{{ music_library_path }}/music:/music"
      - "{{ music_library_path }}/downloads:/downloads"
    restart: "no"  # Only run when needed
    profiles:
      - tools

  portainer-agent:
    image: portainer/agent:latest
    container_name: portainer-agent
    restart: unless-stopped
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_CLUSTER_ADDR=tasks.agent

networks:
  default:
    name: music-stack
