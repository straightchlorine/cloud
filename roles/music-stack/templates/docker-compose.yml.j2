services:
  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    ports:
      # it's exposed for traefik on pi-automation deployment
      - "{{ navidrome_port }}:4533"
    environment:
      ND_MUSICFOLDER: /music
      ND_DATAFOLDER: /data
      ND_LOGLEVEL: info
      ND_BASEURL: "https://navidrome.codextechnologies.org"
      ND_JWTKEY: "${NAVIDROME_JWT_SECRET}"
      ND_AUTOIMPORTPLAYLISTS: false
      ND_SCANNER_INTERVAL: 0
      ND_ENABLEINSIGHTSCOLLECTOR: false

      # backup configuration
      # (daily at 1 AM, keep 5 local backups)
      ND_BACKUP_PATH: "/data/backups"
      ND_BACKUP_SCHEDULE: "0 1 * * *"
      ND_BACKUP_COUNT: 5

      # cache optimization for Raspberry Pi
      ND_IMAGECACHESIZE: "250MB"
      ND_TRANSCODINGCACHESIZE: "500MB"

      # scanner optimization
      ND_SCANNER_WATCHERWAIT: "10s"
      ND_SCANNER_SCANONSTARTUP: true
      ND_SCANNER_PURGEMISSING: "full"

      # performance and security
      ND_SESSIONTIMEOUT: "24h"
      ND_DEFAULTUIVOLUME: 70
      ND_ENABLELOGREDACTING: true

      # transcoding
      ND_DEFAULTDOWNSAMPLINGFORMAT: "opus"
      ND_ENABLETRANSCODINGCONFIG: true

      # UI improvements
      ND_DEFAULTTHEME: "Dark"
      ND_ENABLECOVERANIMATION: true
      ND_MAXSIDEBARPLAYLISTS: 50
    volumes:
      - "{{ music_library_path }}/music:/music:ro"
      - "{{ music_library_path }}/navidrome-data:/data"
    restart: unless-stopped
    user: "{{ ansible_uid }}:{{ ansible_gid }}"

  beets:
    image: linuxserver/beets:latest
    container_name: beets
    environment:
      PUID: {{ ansible_uid }}
      PGID: {{ ansible_gid }}
      TZ: {{ timezone }}
    volumes:
      - "{{ music_stack_home }}/config/beets:/config"
      - "{{ music_library_path }}/music:/music"
      - "{{ music_library_path }}/downloads:/downloads"
    restart: "no"  # Only run when needed
    profiles:
      - tools

  dozzle-agent:
    image: amir20/dozzle:latest
    container_name: dozzle-agent
    restart: unless-stopped
    command: agent
    ports:
      - "7007:7007"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:

  portainer-agent:
    image: portainer/agent:latest
    container_name: portainer-agent
    restart: unless-stopped
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
    environment:
      - AGENT_CLUSTER_ADDR=tasks.agent

networks:
  default:
    name: music-stack
