directory: {{ music_library_path }}/music
library: {{ music_stack_home }}/config/beets/library.db

import:
    move: yes
    copy: no
    write: yes
    resume: yes
    incremental: yes
    quiet_fallback: skip
    timid: no
    log: {{ music_stack_home }}/logs/beets-import.log
    # Enhanced YouTube download handling
    from_scratch: no
    group_albums: no
    # Allow duplicates for different qualities/versions
    duplicate_action: keep
    # Auto-tag YouTube singles as singletons
    autotag: yes
    # Handle cases where no match is found - AUTOMATIC
    none_rec_action: asis
    # Automatically import as singletons when no album match
    default_action: apply

match:
    strong_rec_thresh: 0.04
    medium_rec_thresh: 0.25
    # Very lenient matching for YouTube content
    ignored_media: ['Data CD', 'DVD-Video', 'Blu-ray', 'Digital Media']
    # Distance penalties for YouTube matching
    distance_weights:
        source: 0.1
        album: 0.5
        albumartist: 0.2
        artist: 0.4
        track: 0.4
    
per_disc_numbering: yes

paths:
    # Standard music organization
    default: $albumartist/$album%aunique{}/%if{$track,${track}. }$title
    # YouTube singles and unmatched content (use uploader when no artist found)
    singleton: YouTube Downloads/%if{$artist,$artist,$uploader}/$title
    # Compilation albums
    comp: Compilations/$album%aunique{}/%if{$track,${track}. }$title
    # YouTube content with proper fallbacks
    genre:youtube: YouTube/%if{$albumartist,$albumartist,$uploader}/$album%aunique{}/%if{$track,${track}. }$title
    # Singles path
    albumtype:single: Singles/%if{$artist,$artist,$uploader} - $title
    # Fallback for unknown content
    albumartist_sort:"": _Unknown/%if{$uploader,$uploader,Unknown}/%if{$album,$album,Singles}/%if{$track,${track}. }$title

# Essential plugins only (removed problematic ones)
plugins: fetchart embedart inline

fetchart:
    auto: yes
    cautious: yes
    sources: filesystem coverart itunes amazon albumart
    
embedart:
    auto: yes
    maxwidth: 1000
    quality: 95
    remove_art_file: no

# Inline plugin for custom field calculations
inline:
    # Add a YouTube flag for identification
    is_youtube: "True if 'youtube' in path.lower() or uploader else False"
    # Try to extract artist from title (common patterns: "Artist - Title", "Artist: Title")
    title_artist: |
        import re
        if ' - ' in title and not artist:
            parts = title.split(' - ', 1)
            return parts[0].strip() if len(parts) > 1 else ''
        elif ': ' in title and not artist:
            parts = title.split(': ', 1)  
            return parts[0].strip() if len(parts) > 1 else ''
        else:
            return artist or ''
    # Clean title without artist prefix
    clean_track_title: |
        import re
        if ' - ' in title:
            parts = title.split(' - ', 1)
            return parts[1].strip() if len(parts) > 1 else title
        elif ': ' in title:
            parts = title.split(': ', 1)
            return parts[1].strip() if len(parts) > 1 else title
        else:
            return title