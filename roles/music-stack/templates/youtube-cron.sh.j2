#!/bin/bash

### youtube-cron.sh
# Wrapper script for daily YouTube playlist sync via cron
# Handles environment loading and proper logging
###

set -euo pipefail

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MUSIC_STACK_HOME="{{ music_stack_home }}"
LOG_FILE="$MUSIC_STACK_HOME/logs/youtube-sync-cron.log"
ENV_FILE="$MUSIC_STACK_HOME/config/youtube.env"
SYNC_SCRIPT="$MUSIC_STACK_HOME/scripts/youtube-sync.sh"
LOCK_FILE="/tmp/youtube-cron.lock"

# Logging function with timestamp
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

# Cleanup function
cleanup() {
    local exit_code=$?
    [[ -f "$LOCK_FILE" ]] && rm -f "$LOCK_FILE"
    exit $exit_code
}
trap cleanup EXIT INT TERM

# Start logging
log "=== YouTube Cron Job Started ==="

# Check for lock file to prevent overlapping runs
if [[ -f "$LOCK_FILE" ]]; then
    log "ERROR: Another YouTube sync is already running (lock file exists: $LOCK_FILE)"
    exit 1
fi

# Create lock file
echo $$ > "$LOCK_FILE"

# Check if sync script exists
if [[ ! -f "$SYNC_SCRIPT" ]]; then
    log "ERROR: Sync script not found: $SYNC_SCRIPT"
    exit 1
fi

# Verify playlist URL is set (should come from cron environment)
if [[ -z "${PLAYLIST_URL:-}" ]]; then
    log "ERROR: PLAYLIST_URL not set in cron environment"
    log "Attempting to load from environment file as fallback..."
    
    # Fallback: try to source environment file
    if [[ -f "$ENV_FILE" ]]; then
        log "Loading environment from: $ENV_FILE"
        set -a  # Export all variables
        source "$ENV_FILE"
        set +a
        
        if [[ -z "${PLAYLIST_URL:-}" ]]; then
            log "ERROR: PLAYLIST_URL not found in environment file either"
            exit 1
        fi
    else
        log "ERROR: No environment file found at $ENV_FILE"
        exit 1
    fi
fi

log "Starting YouTube playlist sync for: $PLAYLIST_URL"

# Run the sync script and capture output
if "$SYNC_SCRIPT" >> "$LOG_FILE" 2>&1; then
    log "YouTube sync completed successfully"
    exit_code=0
else
    exit_code=$?
    log "ERROR: YouTube sync failed with exit code: $exit_code"
fi

log "=== YouTube Cron Job Finished (exit code: $exit_code) ==="

exit $exit_code