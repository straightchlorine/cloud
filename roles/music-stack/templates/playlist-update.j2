#!/bin/bash

### playlist-update
# Using yt-dlp downloads youtube playlist.
# Enhanced version with proper ARM64 binary and metadata for beets
###

set -euo pipefail

# Configuration
YTDLP_BINARY="/usr/local/bin/yt-dlp"
MUSIC_DIRECTORY="${MUSIC_DIRECTORY:-{{ music_library_path }}/downloads}"
YTDLP_CACHE_DIRECTORY="${YTDLP_CACHE_DIRECTORY:-{{ music_stack_home }}/config}"
THOUGHT_PLAYLIST="${THOUGHT_PLAYLIST:-}"

# Validation
if [[ ! -x "$YTDLP_BINARY" ]]; then
    echo "ERROR: yt-dlp binary not found at $YTDLP_BINARY"
    exit 1
fi

if [[ -z "$THOUGHT_PLAYLIST" ]]; then
    echo "ERROR: THOUGHT_PLAYLIST environment variable not set"
    echo "Usage: THOUGHT_PLAYLIST='https://youtube.com/playlist?list=...' $0"
    exit 1
fi

# Ensure directories exist
mkdir -p "$MUSIC_DIRECTORY" "$YTDLP_CACHE_DIRECTORY"

# Enhanced yt-dlp command with comprehensive metadata and best practices
"$YTDLP_BINARY" \
    --extract-audio \
    --audio-format opus \
    --audio-quality 0 \
    --concurrent-fragments 10 \
    --output "$MUSIC_DIRECTORY/%(uploader)s/%(playlist_title|Unknown Album)s/%(track_number|00)s - %(title)s.%(ext)s" \
    --newline \
    --format "bestaudio[acodec=opus]/bestaudio[ext=m4a]/bestaudio/best" \
    --force-ipv4 \
    --download-archive "$YTDLP_CACHE_DIRECTORY/archive.txt" \
    --cache-dir "$YTDLP_CACHE_DIRECTORY" \
    --embed-thumbnail \
    --embed-metadata \
    --write-info-json \
    --add-metadata \
    --parse-metadata "title:%(title)s" \
    --parse-metadata "artist:%(uploader)s" \
    --parse-metadata "album:%(playlist_title)s" \
    --parse-metadata "albumartist:%(uploader)s" \
    --parse-metadata "track:%(playlist_index)s" \
    --postprocessor-args "ffmpeg:-metadata title=%(title)s -metadata artist=%(uploader)s -metadata album=%(playlist_title)s -metadata albumartist=%(uploader)s -metadata date=%(upload_date>%Y)s -metadata track=%(playlist_index)s -metadata genre=YouTube -metadata comment=Downloaded from %(webpage_url)s" \
    --ignore-errors \
    --continue \
    --no-abort-on-error \
    --retries 3 \
    --fragment-retries 3 \
    --limit-rate 2M \
    --sponsorblock-remove sponsor,selfpromo,interaction,intro,outro \
    "$THOUGHT_PLAYLIST" &

# Wait for completion
wait

echo "Playlist download completed successfully"

# Optional: Run Beets import if available
if command -v beet >/dev/null 2>&1; then
    echo "Running Beets import on downloaded files..."
    beet import --config "{{ music_stack_home }}/config/beets/config.yaml" --incremental --autotag "$MUSIC_DIRECTORY" || echo "Warning: Beets import failed"
fi

echo "All operations completed"